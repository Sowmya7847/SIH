<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Metro Timetable Dashboard</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
.card-train { position: relative; overflow: hidden; transition: transform 0.2s; height: 150px; }
.card-train:hover { transform: scale(1.05); }

.low { background-color: #d1e7dd !important; }
.medium { background-color: #fff3cd !important; }
.high { background-color: #f8d7da !important; animation: flash 1s infinite; }

/* Flashing */
@keyframes flash { 0%,100%{background-color:#f8d7da}50%{background-color:#f5c2c7} }

/* Train icon animation */
.train { position: absolute; top: 5px; left: -40px; width: 30px; height: 30px; background-image: url('https://cdn-icons-png.flaticon.com/512/61/61189.png'); background-size: cover; animation: moveTrain 5s linear infinite; }
@keyframes moveTrain { 0% { left: -40px; } 100% { left: calc(100% + 40px); } }
</style>
</head>
<body class="bg-light">
<div class="container py-5">
<h1 class="text-center text-primary mb-4">Metro Timetable Dashboard</h1>

<!-- Station Filter -->
<div class="mb-4 text-center">
  <select id="stationFilter" class="form-select w-25 d-inline">
    <option value="">All Stations</option>
    <option value="Central">Central</option>
    <option value="North">North</option>
    <option value="South">South</option>
  </select>
</div>

<!-- Timetable Cards -->
<div class="row g-4" id="timetable">
<% timetable.forEach(slot => { %>
<div class="col-md-4">
  <div class="card card-train <%= slot.trains <=3 ? 'low' : slot.trains <=6 ? 'medium' : 'high' %> shadow-sm">
    <div class="train"></div>
    <div class="card-body">
      <h5 class="card-title"><%= slot.station %> <%= slot.time %></h5>
      <p class="card-text fs-5">Trains: <%= slot.trains %></p>
      <p class="card-text fs-6">Passengers: <%= slot.passengers %></p>
      <span class="badge <%= slot.trains>6 ? 'bg-danger':'bg-warning text-dark' %>">
        <%= slot.trains>6?'Overcrowded':'Moderate' %>
      </span>
    </div>
  </div>
</div>
<% }) %>
</div>

<!-- Optimize Button -->
<div class="text-center my-4">
  <form action="/optimize" method="POST">
    <button class="btn btn-lg btn-primary">Optimize Peak Hours</button>
  </form>
</div>

<!-- Passenger Trend Chart -->
<h3 class="mt-5 text-center">Passenger Trends</h3>
<canvas id="passengerChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
const timetableContainer = document.getElementById('timetable');
const stationFilter = document.getElementById('stationFilter');
let chart;

async function fetchTimetable() {
  const res = await fetch('/api/timetable');
  const data = await res.json();
  timetableContainer.innerHTML = '';

  data.forEach(slot => {
    if(stationFilter.value && slot.station !== stationFilter.value) return;

    const colorClass = slot.trains <=3 ? 'low' : slot.trains <=6 ? 'medium' : 'high';
    const badge = slot.trains>6 ? '<span class="badge bg-danger">Overcrowded</span>' : '<span class="badge bg-warning text-dark">Moderate</span>';

    const col = document.createElement('div');
    col.className = 'col-md-4';
    col.innerHTML = `
      <div class="card card-train ${colorClass} shadow-sm">
        <div class="train"></div>
        <div class="card-body">
          <h5 class="card-title">${slot.station} ${slot.time}</h5>
          <p class="card-text fs-5">Trains: ${slot.trains}</p>
          <p class="card-text fs-6">Passengers: ${slot.passengers}</p>
          ${badge}
        </div>
      </div>`;
    timetableContainer.appendChild(col);
  });

  // Chart
  const labels = data.map(s => s.station + ' ' + s.time);
  const passengers = data.map(s => s.passengers);
  if(chart) chart.destroy();
  const ctx = document.getElementById('passengerChart').getContext('2d');
  chart = new Chart(ctx, {
    type: 'line',
    data: { labels, datasets: [{ label:'Passengers', data:passengers, borderColor:'blue', fill:false, tension:0.3 }] }
  });
}

fetchTimetable();
setInterval(fetchTimetable, 3000);

// Filter
stationFilter.addEventListener('change', fetchTimetable);
</script>
</body>
</html>
